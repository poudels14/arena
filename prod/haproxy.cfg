global
  chroot /var/lib/haproxy
  user haproxy
  group haproxy

  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

  log /dev/log local0

defaults
  log global
  mode  http
  option  httplog

frontend http
  bind *:80
  timeout client 10000
  http-request add-header X-Forwarded-Proto http
  default_backend website

frontend https
  bind *:443 ssl crt /etc/haproxy/certs/sidecar.so.pem alpn h2,http/1.1
  timeout client 50000
  http-request add-header X-Forwarded-Proto https
  http-request set-header X-SSL %[ssl_fc]

  redirect scheme https code 301 if !{ ssl_fc }
  acl letsencrypt-acl path_beg /.well-known/acme-challenge/
  use_backend letsencrypt-backend if letsencrypt-acl
  use_backend app_cluster if { path_beg /w/ }
  use_backend workspace_cluster if { path_beg /api/ }
  use_backend workspace_cluster if { path_beg /registry/ }
  acl logged_in hdr_sub(cookie) logged-in=true
  use_backend workspace_cluster if logged_in
  default_backend website
  option tcplog

backend letsencrypt-backend
  timeout connect 10000
  timeout server 30000
  server letsencrypt 127.0.0.1:54321

backend website
  balance roundrobin
  timeout connect 10000
  timeout server 50000
  server server1 127.0.0.1:9000 #check

backend workspace_cluster
  balance roundrobin
  timeout connect 10000
  timeout server 50000
  server server1 127.0.0.1:9001 #check

backend app_cluster
  balance roundrobin
  timeout connect 10000
  timeout server 50000
  server server1 127.0.0.1:9002 #check
